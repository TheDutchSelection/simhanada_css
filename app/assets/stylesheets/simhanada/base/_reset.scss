// Reset the box-sizing
//
// Change from `box-sizing: content-box` to `border-box` so that when you add
// `padding` or `border`s to an element, the overall declared `width` does not
// change. For example, `width: 100px;` will always be `100px` despite the
// `border: 10px solid red;` and `padding: 20px;`.

html {
  box-sizing: border-box;
  //-webkit-font-smoothing: antialiased;
  //-moz-osx-font-smoothing: grayscale;

  // remove grey tap hightlight
  -webkit-tap-highlight-color: transparent;

  // https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering
  text-rendering: optimizelegibility;
}

body {
  margin: 0;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

iframe {
  border: 0;
}


// Reset margin and padding
h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl,
blockquote,
figure,
button,
pre {
  margin: 0;
  padding: 0;
}

main,
li {
  display: block;
}

// Correct `block` display not defined for any HTML5 element in IE 8/9.
// Correct `block` display not defined for `details` or `summary` in IE 10/11
// and Firefox.
// Correct `block` display not defined for `main` in IE 11.
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

// Remove most spacing between table cells.
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-size: inherit;
}

b,
strong {
  font-weight: bold;
}

address {
  font-style: normal;
  line-height: inherit;
}

a {
  // Remove the gray background color from active links in IE 10.
  background-color: transparent;

  // Improve readability of focused elements when they are also in an
  // active/hover state.
  &:active {
    outline: 0;
  }

  &:hover {
    outline: 0;
  }
}

a,
button {
  color: inherit;
}

img {
  // todo: waarom werkt dit niet?
  //max-width: 100%;
  //height: auto;
  border: 0;
}

// ======================== Form elements ========================

button {
  overflow: visible;
  border: 0;
  font: inherit;
  letter-spacing: inherit;
  background: none;
  cursor: pointer;
  -webkit-font-smoothing: inherit;

  &:focus {
    outline: 0;
  }
}

input,
button,
select,
textarea {
  // Remove all `margin`s so our classes don't have to do it themselves.
  margin: 0;
  // Normalize includes `font: inherit;`, so `font-family`. `font-size`, etc are
  // properly inherited. However, `line-height` isn't addressed there. Using this
  // ensures we don't need to unnecessarily redeclare the global font stack.
  line-height: inherit;
  // iOS adds rounded borders by default
  border-radius: 0;
}

textarea {
  // Textareas should really only resize vertically so they don't break
  // their (horizontal) containers.
  resize: vertical;
}

fieldset {
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
  // Reset the default outline behavior of fieldsets so they don't affect
  // page layout.
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  display: block;
  padding: 0;
  margin: 0;
}

// Always hide an element with the `hidden` HTML attribute (from PureCSS).
[hidden] {
  display: none !important;
}

// ======================== Platform specific hacks ========================

// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile
[role="button"] {
  cursor: pointer;
}

input[type="search"] {
  // This overrides the extra rounded corners on search inputs in iOS so that our
  // `.form-control` class can properly style them. Note that this cannot simply
  // be added to `.form-control` as it's not specific enough. For details, see
  // https://github.com/twbs/bootstrap/issues/11586.
  -webkit-appearance: none;
}

// Avoid 300ms click delay on touch devices that support the `touch-action` CSS property.
//
// In particular, unlike most other browsers, IE11+Edge on Windows 10 on touch devices and IE Mobile 10-11
// DON'T remove the click delay when `<meta name="viewport" content="width=device-width">` is present.
// However, they DO support removing the click delay via `touch-action: manipulation`.
// See:
// * http://v4-alpha.getbootstrap.com/content/reboot/#click-delay-optimization-for-touch
// * http://caniuse.com/#feat=css-touch-action
// * http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay
a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
  touch-action: manipulation;
}

// Remove inner padding and border in Firefox 4+.
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

// Disable rounded buttons on ios devices
input[type="submit"] {
  -webkit-appearance: none;
}
